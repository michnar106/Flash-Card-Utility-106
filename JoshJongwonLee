print 
print "________________________________________Flashcards!________________________________________"
print 
print
front_of_card = raw_input("""Enter the front parts of your cards here. Separate each card with a comma. (Important: there should be no space in between!) Press enter when done.   """)
dafront = front_of_card.split(",")
print 
print
back_of_card = raw_input("""Enter the corresponding answers here. Separate each card with a comma.(Important: there should be no space in between!) Press enter when done.
""")
daback = back_of_card.split(",")
print
webstersdict = {}
for x in range(len(dafront)):
    webstersdict[dafront[x]] = daback[x]   
print
print "___________________________________________________________________________________________"
print webstersdict 
print "The line above shows all of your flashcard data together. Comment that line out when you don't want to see the answers."
print
print
ff = webstersdict.keys()
print ff
print "-- These are the keys (fronts) of your cards. For the next raw_input, you can test yourself by inputting a key, guessing its value, and then pressing enter to see the answer. Good luck!"
print "___________________________________________________________________________________________"
print   
while 1==1:
	checkyoself = str(raw_input("""put in key name of card you want to use. type 'quit' to exit
"""))
	quit = "quit"
	if checkyoself == quit:
		break
	print ":is:"
	print webstersdict[checkyoself]
	print "___________________________________________________________________________________________"
	print ff
	print "These are the keys (fronts) of your cards."
	print "___________________________________________________________________________________________"
	
#Josh Jongwon Lee: I fixed it! Now it iterates over and over until the user types quit. 
#The program terminates when the user types quit. Plus, I noticed that when the user 
#initially types in the front parts and back parts of the card, there should be no space 
#in between at all. So I added a notification saying that there should be no space. 
#Plus, when every the program iterates, it shows the list of the front part again. 
#It is much more convenient this way so that the user can look at every time he/she wants 
#to type another front part - just like a word bank on a vocabulary test. 
#I also added some lines just so that it looks neater.
